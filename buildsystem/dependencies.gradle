ext {
    //Android libraries
    appCompat = '1.6.1'
    kotlinKtx = '1.12.0'
    koin = '3.5.0'
    fragmentKtx = '1.6.2'
    recyclerView = '1.3.2'
    lifecycle = '2.6.2'
    lifecycleExt = '2.2.0'
    design = '1.10.0'
    constraintLayout = '2.1.4'
    vectorDrawable = '1.1.0'
    exifinterface = '1.3.7'
    androidConcurrentFutures = '1.1.0'

    //Third party libraries
    timber = '5.0.1'
    slf4j = '2.0.12'
    intents = '1.2.6'
    retrofit = '2.9.0'
    loggingInterceptor = '4.12.0'
    okHttpVersion = '4.10.0'
    gson = '2.10.1'
    rxJava = '2.2.21'
    rxAndroid = '2.1.1'
    picasso = '2.71828'

    //Unit Testing
    robolectric = '4.11.1'
    junit = '4.13.2'
    mockito = '5.10.0'
    kotlinMockito = '2.2.0'
    mockitoInline = '5.2.0'
    extJunit = '1.1.5'
    extTruth = '1.5.0'
    truth = '1.1.5'
    archTesting = '2.2.0'

    ktx = [
            kotlinLib              : "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    ]

    android = [
            appCompat            : "androidx.appcompat:appcompat:$appCompat",
            concurrentFutures    : "androidx.concurrent:concurrent-futures:$androidConcurrentFutures",
            coreKtx              : "androidx.core:core-ktx:$kotlinKtx",
            fragmentKtx          : "androidx.fragment:fragment-ktx:$fragmentKtx",
            constraintLayout     : "androidx.constraintlayout:constraintlayout:$constraintLayout",
            vectorDrawable       : "androidx.vectordrawable:vectordrawable:$vectorDrawable",
            exifinterface        : "androidx.exifinterface:exifinterface:$exifinterface",
            recyclerView         : "androidx.recyclerview:recyclerview:$recyclerView",
            design               : "com.google.android.material:material:$design",
    ]

    lifecycleComponents = [
            common      : "androidx.lifecycle:lifecycle-common:$lifecycle",
            compiler    : "androidx.lifecycle:lifecycle-compiler:$lifecycle",
            extensions  : "androidx.lifecycle:lifecycle-extensions:$lifecycleExt",
            livedata    : "androidx.lifecycle:lifecycle-livedata:$lifecycle",
            livedataCore: "androidx.lifecycle:lifecycle-livedata-core:$lifecycle",
            runtime     : "androidx.lifecycle:lifecycle-runtime:$lifecycle",
            viewModel   : "androidx.lifecycle:lifecycle-viewmodel:$lifecycle"
    ]

    thirdParty = [
            timber               : "com.jakewharton.timber:timber:$timber",
            slf4j                : "org.slf4j:slf4j-api:$slf4j",
            intents              : "com.github.kostasdrakonakis:android-navigator:$intents",
            intentsCompiler      : "com.github.kostasdrakonakis:android-navigator-compiler:$intents",
            retrofit             : "com.squareup.retrofit2:retrofit:$retrofit",
            retrofitRxJava       : "com.squareup.retrofit2:adapter-rxjava2:$retrofit",
            retrofitConverter    : "com.squareup.retrofit2:converter-gson:$retrofit",
            loggingInterceptor   : "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor",
            gson                 : "com.google.code.gson:gson:$gson",
            rxJava               : "io.reactivex.rxjava2:rxjava:$rxJava",
            rxAndroid            : "io.reactivex.rxjava2:rxandroid:$rxAndroid",
            picasso              : "com.squareup.picasso:picasso:$picasso",
            koin                 :"io.insert-koin:koin-core:$koin",
            koinAndroid          :"io.insert-koin:koin-android:$koin",
            mockWebServer        :"com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    ]

    unitTesting = [
            kotlinTest           : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            koinTest             : "io.insert-koin:koin-test:$koin",
            junit                : "junit:junit:$junit",
            mockito              : "org.mockito:mockito-android:$mockito",
            robolectric          : "org.robolectric:robolectric:$robolectric",
            kotlinMockito        : "com.nhaarman.mockitokotlin2:mockito-kotlin:$kotlinMockito",
            mockitoCore          : "org.mockito:mockito-core:$mockito",
            mockitoInline        : "org.mockito:mockito-inline:$mockitoInline"
    ]

    instrumentationTesting = [
            extJunit          : "androidx.test.ext:junit:$extJunit",
            extTruth          : "androidx.test.ext:truth:$extTruth",
            truth             : "com.google.truth:truth:$truth",
            archTest          : "androidx.arch.core:core-testing:$archTesting"
    ]
}
